@page
@model ServersModel
@{
    ViewData["Title"] = "My Servers";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <div class="card shadow">
                <div class="card-header bg-info text-white">
                    <h2 class="mb-0"><i class="fas fa-list"></i> My AWS Servers</h2>
                </div>
                <div class="card-body">
                    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
                    {
                        <div class="alert alert-danger" role="alert">
                            <i class="fas fa-exclamation-triangle"></i> @Model.ErrorMessage
                        </div>
                    }

                    <form method="post" enctype="multipart/form-data" class="mb-4">
                        <div class="card">
                            <div class="card-header">
                                <h5><i class="fab fa-aws"></i> AWS Credentials</h5>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group mb-3">
                                            <label for="AccessKey" class="form-label">Access Key ID</label>
                                            <input type="text" class="form-control" id="AccessKey" 
                                                   asp-for="AwsConfig.AccessKey" required>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group mb-3">
                                            <label for="SecretKey" class="form-label">Secret Access Key</label>
                                            <input type="password" class="form-control" id="SecretKey" 
                                                   asp-for="AwsConfig.SecretKey" required>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group mb-3">
                                            <label for="Region" class="form-label">AWS Region</label>
                                            <select class="form-control" id="Region" asp-for="AwsConfig.Region">
                                                <option value="us-east-1">US East (N. Virginia)</option>
                                                <option value="us-west-2">US West (Oregon)</option>
                                                <option value="eu-west-1">Europe (Ireland)</option>
                                                <option value="ap-southeast-1">Asia Pacific (Singapore)</option>
                                                <option value="ap-northeast-1">Asia Pacific (Tokyo)</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group mb-3">
                                    <label for="PemFile" class="form-label">Загрузить приватный ключ (.pem файл)</label>
                                    <input type="file" class="form-control" id="PemFile" name="PemFile" accept=".pem" required />
                                </div>
                                <div class="text-center">
                                    <button type="submit" class="btn btn-info">
                                        <i class="fas fa-sync"></i> Load Servers
                                    </button>
                                </div>
                            </div>
                        </div>
                    </form>

                    @if (Model.Servers.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        <th><i class="fas fa-server"></i> Instance ID</th>
                                        <th><i class="fas fa-tag"></i> Name</th>
                                        <th><i class="fas fa-microchip"></i> Type</th>
                                        <th><i class="fas fa-traffic-light"></i> State</th>
                                        <th><i class="fas fa-globe"></i> Public IP</th>
                                        <th><i class="fas fa-network-wired"></i> Private IP</th>
                                        <th><i class="fas fa-calendar"></i> Launch Time</th>
                                        <th><i class="fas fa-cogs"></i> Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var server in Model.Servers)
                                    {
                                        <tr>
                                            <td><code>@server.InstanceId</code></td>
                                            <td>@server.Name</td>
                                            <td><span class="badge bg-secondary">@server.InstanceType</span></td>
                                            <td>
                                                @{
                                                    var stateClass = server.State switch
                                                    {
                                                        "running" => "bg-success",
                                                        "stopped" => "bg-danger",
                                                        "pending" => "bg-warning",
                                                        "stopping" => "bg-warning",
                                                        "terminated" => "bg-dark",
                                                        _ => "bg-secondary"
                                                    };
                                                }
                                                <span class="badge @stateClass">@server.State</span>
                                            </td>
                                            <td>@(string.IsNullOrEmpty(server.PublicIpAddress) ? "N/A" : server.PublicIpAddress)</td>
                                            <td>@(string.IsNullOrEmpty(server.PrivateIpAddress) ? "N/A" : server.PrivateIpAddress)</td>
                                            <td>@server.LaunchTime.ToString("yyyy-MM-dd HH:mm")</td>
                                            <td>
                                                <div class="btn-group btn-group-sm" role="group">
                                                    @if (server.State == "running")
                                                    {
                                                        <button type="button" class="btn btn-warning" onclick="controlInstance('@server.InstanceId', 'stop')">
                                                            <i class="fas fa-stop"></i>
                                                        </button>
                                                    }
                                                    @if (server.State == "stopped")
                                                    {
                                                        <button type="button" class="btn btn-success" onclick="controlInstance('@server.InstanceId', 'start')">
                                                            <i class="fas fa-play"></i>
                                                        </button>
                                                    }
                                                    @if (server.State != "terminated")
                                                    {
                                                        <button type="button" class="btn btn-danger" onclick="controlInstance('@server.InstanceId', 'terminate')">
                                                            <i class="fas fa-trash"></i>
                                                        </button>
                                                    }
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else if (Model.ServersLoaded)
                    {
                        <div class="alert alert-info text-center" role="alert">
                            <i class="fas fa-info-circle"></i> No servers found in this region.
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

